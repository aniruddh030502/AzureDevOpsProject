# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- dependabot/npm_and_yarn/result/express-4.19.2

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  azureSubscription: 'capstone2' # Create this in Project Settings -> Service connections
  resourceGroup: 'rg-aks-active'
  aksCluster1: 'aks-active-cluster'
  aksCluster2: 'aks-passive-cluster'
  dockerRegistryServiceConnection: 'acrconnect'
  imageRepository: 'examplevotingappvotes'
  containerRegistry: 'aksmultiregistryani.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/vote/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildAndPushImage
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: "Default"
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
- stage: DeployToAKS
  displayName: 'Deploy to AKS'
  pool:
    name: "Default"
  dependsOn: BuildAndPushImage # This stage runs only after the build and push is successful
  condition: succeeded() # Only run if the previous stage succeeded
  jobs:
  - job: Deploy1
    displayName: 'Deploy Vote Service'
    steps:
    - task: Kubernetes@1
      displayName: 'Apply Kubernetes Manifests'
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'capstone2'
        azureResourceGroup: '$(resourceGroup)'
        kubernetesCluster: '$(aksCluster1)'
        command: 'apply'
        arguments: '-f k8s-specifications/vote-deployment.yaml -f k8s-specifications/vote-service.yaml' # Adjust paths as needed
  - job: Deploy2
    displayName: 'Deploy Vote Service'
    steps:
    - task: Kubernetes@1
      displayName: 'Apply Kubernetes Manifests'
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'capstone2'
        azureResourceGroup: '$(resourceGroup)'
        kubernetesCluster: '$(aksCluster2)'
        command: 'apply'
        arguments: '-f k8s-specifications/vote-deployment.yaml -f k8s-specifications/vote-service.yaml' # Adjust paths as needed